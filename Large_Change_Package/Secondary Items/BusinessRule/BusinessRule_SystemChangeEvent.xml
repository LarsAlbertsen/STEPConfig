<?xml version="1.0" encoding="UTF-8"?>
<STEP-ProductInformation ContextID="Context1" WorkspaceID="Main" UseContextLocale="false">
    <BusinessRules>
        <BusinessRule ID="SystemChangeEvent" Scope="Global" Type="Action" RunPrivileged="false"><!-- Definition:
Action #1 (JavaScriptBusinessActionWithBinds):
<config>
  <bindings>
    <binding alias="EventBatch" type="EventBatch" contract="EventProcessorEventBatchBindContract"/>
    <binding alias="SystemChangesRoot" type="Classification" contract="ClassificationBindContract">
      SystemChangesRoot
    </binding>
    <binding alias="SystemChangeObjType" type="ObjectType" contract="ObjectTypeBindContract">
      SystemChange
    </binding>
    <binding alias="SystemChangeDateObjType" type="ObjectType" contract="ObjectTypeBindContract">
      SystemChangeDate
    </binding>
    <binding alias="SystemChangeUserObjType" type="ObjectType" contract="ObjectTypeBindContract">
      SystemChangeUser
    </binding>
    <binding alias="step" type="Manager" contract="ManagerBindContract"/>
  </bindings>
  <messages/>
  <javaScript>
logger.info("SystemChangeEvent "+EventBatch);

var allEvents = EventBatch.getEvents();
var it = allEvents.iterator();
while (it.hasNext()) {
	var e = it.next();
	logger.info("SystemChangeEvent Event "+e.getClass().getName());
	handleEvent(e);
}


function getUser(pEvent) {
	var m1 = pEvent.getClass().getMethod("getQueuedEvent");
	var queuedEvent = m1.invoke(pEvent);

	var m2 = queuedEvent.getClass().getMethod("getChangeLog");
	var changeLog = m2.invoke(queuedEvent);

	var m3 = changeLog.getClass().getMethod("getUserID");
	var userID = m3.invoke(changeLog);
	
	logger.info("userID "+userID);
	return userID;
}


function handleEvent(pEvent) {
	var node = pEvent.getNode();

	if (node!=null) {
		logger.info("SystemChangeEvent Type="+node.getClass().getName());
		var type = node.getClass().getSimpleName().replace("Front", "").replace("Impl", "");
		var id = node.getID();
		var userID = getUser(pEvent); //node.getManager().getCurrentUser().getName();
	
	
		//logger.info("SystemChangeEvent 1");
		var now = new java.util.Date();
		//logger.info("SystemChangeEvent 2");
		var currentLocale = java.util.Locale.getDefault();
		var dateFormat = java.text.DateFormat.getDateInstance(java.text.DateFormat.DEFAULT, currentLocale);
		//logger.info("SystemChangeEvent 3");
		var dateString = dateFormat.format(now);
		//logger.info("SystemChangeEvent now=["+dateString+"]");
		
		
		//var userID = node.getManager().getCurrentUser().getID();
		//logger.info("SystemChangeEvent 3.5 "+userID);
		var userDateClassification = getUserClassification(userID, dateString);
		//logger.info("SystemChangeEvent 4");
		var c = userDateClassification.createClassification("", SystemChangeObjType.getID());
		//logger.info("SystemChangeEvent 5");
		c.setName(type+" ID="+id);
		//logger.info("SystemChangeEvent 6");
	
	
	}
	else {
		logger.info("SystemChangeEvent Nothing");
	}
}



function getDateClassification(pDateString) {
	var id = "SystemChange "+ pDateString;
	var root = step.getClassificationHome().getClassificationByID(id);
	if (root==null) {
		root = SystemChangesRoot.createClassification(id, SystemChangeDateObjType.getID());
		root.setName(pDateString);
	}
	return root;
}

function getUserClassification(pUser, pDateString) {
	var id = "SystemChange "+pUser+" "+pDateString;
	logger.info("SystemChangeEvent.getUserClassification 1 ["+id+"]");
	var root = step.getClassificationHome().getClassificationByID(id);
	logger.info("SystemChangeEvent.getUserClassification 2 ["+root+"]");
	if (root==null) {
		var dateRoot = getDateClassification(pDateString);
		root = dateRoot.createClassification(id, SystemChangeUserObjType.getID());
		root.setName(pUser);
	}
	return root;
}
  </javaScript>
</config> -->
            <SetupGroupLink SetupGroupID="Actions"></SetupGroupLink>
            <Name QualifierID="Qualifier root">SystemChangeEvent</Name>
            <OnApprove ApproveSetup="Never"></OnApprove>
            <Configuration>H4sIAAAAAAAAAL1YbU/jRhD+jH/FNh+QEanTwF1VKS8ICOhSAaW8qB9OFdqzN8leN17feh0OVfz3m9n1uwNxUKmIhD07M88zL55dOxLJnIcPNIoEZ/EDnz34Mpzx+TAGgR5HdtnKRsOj70tBVkzFXIajTt/7pUNY6MuAh/NR5/7u/OffOkdjZ3iSxDxkcXyTCDZ2CMkF18YdKa9b0XQy6vxOV/TWVzzS2fqxrwHoL64XJzwM4g76Am/XVNEl00DDCsoigp6sNrl7itio8xXceoKGc+9WKyDaGe8KPahEsvstkXoA4diLIiZ7bwKzl0e7cz1w0AFiXNLI3BOSSQhkSivqa6BhLc5WLNTXSvoQj1Tm7oRq30R0miqnsMeC07hsZhTTxTzCU0HjTCtMhLBXvY1EjB2fcZ9iUjfA3z7Fmi1PF5A2Ft9IqV9j4culF2v+RXq+VMwL5JLy0OPLSHjnCjCqyFOQWzuk3ASCAHrIbmNAf3z5ynyNRd4iGDBCizeGU0C+HMU7BzCh+n8IAlHeOZD7mKn3DwRR2gdySUM6Z2pDFOA92uapzPGzeTHs5XYvTLAzpaS6hJEBdF6ZZJsdFUP1ZS9CziFoj4cz6TbrZCYRsfL9YiztDRxnRRWhQhhhTEakWPXmTFuxC4qoxzUo5MoeB4JUS4XLjwsuGHG59hY0vmLftbu3R/51dtCMgRUshEY6cHbacK0wZkjFVMfdw8srSA74B1dgEQhr4jIQPDuOM0tCs+cQ0MTWcSOzntNZ9oGPldX8XjK9kEHKCe7/TFjCAqNpZQiJLr4VC+Br2YdYVvIfliFBWi3SAayWdDfA2fgv5LwK5mdihDrIoEpuC7xDUMnVN6BhaqaTKlRiZIhzmOHk7lBnXe1Sm7RU9g51FdOJClOXtcqUy1arTigDVqnPFQhcEyKfEReXfxrh02ksWvWSeWZSfmj/YjcZAhq0gcAaxVucWMyqe4pFgvosBTV7pL3spqlIM1tTLKZcTS+D50EJfDpx84W8NrW2HpBeL9NPZ5+le5ooBQpGtxSoKSP47PXa5K5foxfKR+THHomZQYnmwsONxvJs5/Og5tO3RC+kTwWmvvBsRch9wmY0EbpIRwCg51Itqc4sNMwXw8WKjRXcTcNY0xAKsFZpcnZ+fH9x162S2CKYw1owyMsOZeBVkPRm5h/07+MWzkF79Dnt3MLxvpX8XUK2v16v0ijtuiLrsZbheh+bj3ren5jY6kmx6Neq3LXW3VK+tmDxod5BALMe3/MVawjd8pPXJWvOlllituD0scTJ9+L0ccNpktaL5EeUfR5s4fjXwjH+PTs7TMSs9fS7knoB2S2cPJtZXNkmm3lzo0lRmGw2m9nUxMkagpRs0g1FwdsA2OBpKx+mOcYnaSZpQ37yBKm3KcKRjz5GpZGf+my8dawvNQ+qBS6dvStFRq951crBm4xluxlqmb2sfsioZw9lXfKGJBrLrGMyWSWvLYrurWVF+uRz3oDNIfJf1Ovt3A5ybsihyW5dJ2Tz9say3tzIg6J9Mrt2XVN60Xmla1Brbb80zvglgfkAMuxVP6+MnUJiv8CkH3N+AJjdgZDsEQAA</Configuration>
            <ValidObjectTypes AllObjectTypesValid="true"></ValidObjectTypes>
        </BusinessRule>
    </BusinessRules>
</STEP-ProductInformation>